body {
    font-family: 'Roboto', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center; /* Keep this to center content horizontally */
    min-height: 100vh; /* Ensure body takes at least full viewport height */
    background: linear-gradient(to top, #6a11cb, #2575fc); /* Portrait-friendly blue-purple gradient */
    color: #fff;
    margin: 0;
    /* REMOVED: overflow: hidden;  <--- THIS WAS THE CULPRIT */
    flex-direction: column; /* Stacks children (the timer container) vertically */
    padding: 20px; /* Add some padding around the container */
    box-sizing: border-box; /* Include padding in element's total width and height */
}

.pomodoro-container {
    background-color: rgba(255, 255, 255, 0.15); /* Slightly less transparent */
    padding: 35px 25px; /* Adjust padding for portrait */
    border-radius: 20px; /* More rounded corners */
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4); /* Deeper shadow */
    text-align: center;
    backdrop-filter: blur(12px); /* Stronger blur */
    border: 1px solid rgba(255, 255, 255, 0.3); /* Clearer border */
    width: 95%; /* Take up more width on smaller screens */
    max-width: 400px; /* Max width suitable for portrait layout */
    animation: fadeIn 1s ease-out;
    display: flex; /* Use flexbox for internal layout */
    flex-direction: column; /* Stack children vertically */
    align-items: center; /* Center children horizontally */
    gap: 25px; /* Space between sections */
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

h1 {
    font-size: 2.2em;
    margin-bottom: 0; /* Remove default margin */
    letter-spacing: 1px;
    font-weight: 700;
}

.timer-mode {
    display: flex;
    justify-content: center;
    gap: 10px;
    width: 100%;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
}

.timer-mode button {
    background-color: rgba(255, 255, 255, 0.2);
    border: none;
    color: #fff;
    padding: 10px 18px; /* Slightly adjusted padding */
    border-radius: 25px;
    font-size: 0.95em; /* Slightly smaller font */
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    outline: none;
    flex: 1; /* Allow buttons to grow and shrink */
    min-width: 100px; /* Minimum width for buttons */
}

.timer-mode button:hover {
    background-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.timer-mode button.active {
    background-color: #fff;
    color: #2575fc; /* Matching gradient color */
    font-weight: bold;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    transform: none; /* No hover effect on active state */
}

/* Timer Display with Adjustment Buttons */
.timer-display-wrapper {
    position: relative; /* For absolute positioning of adjust buttons */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 5em; /* Large display for focus */
    font-weight: 700;
    margin: 20px 0;
    text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);
    letter-spacing: 2px;
    padding: 15px 0; /* Vertical padding to accommodate buttons */
    width: 100%; /* Take full width for centered display */
}

.timer-display {
    color: #fff; /* Ensure text color is white */
}

.timer-adjust-btn {
    position: absolute;
    background: rgba(255, 255, 255, 0.15);
    border-radius: 50%;
    width: 40px; /* Size of the circle button */
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.2s ease;
    z-index: 10; /* Ensure it's above the text */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.timer-adjust-btn .material-icons {
    font-size: 2em; /* Size of the icon */
    color: #fff;
}

.timer-adjust-btn:hover {
    background: rgba(255, 255, 255, 0.25);
    transform: scale(1.05);
}

.timer-adjust-btn:active {
    transform: scale(0.95);
    box-shadow: none;
}

/* Positioning for adjust buttons */
#minutes-up {
    top: -5px; /* Adjust vertical position */
    left: 50%;
    transform: translateX(-50%);
}

#minutes-down {
    bottom: -5px; /* Adjust vertical position */
    left: 50%;
    transform: translateX(-50%);
}

/* Control Buttons (Start, Pause, Reset) */
.timer-controls {
    display: flex;
    flex-direction: column;
    gap: 15px;
    width: 80%;
    max-width: 300px;
}

.control-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    border: none;
    color: white;
    padding: 15px 25px;
    border-radius: 30px;
    font-size: 1.1em;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    outline: none;
    width: 100%;
}

.control-btn .material-icons {
    font-size: 1.5em;
}

.start-btn { background-color: #4CAF50; }
.pause-btn { background-color: #f44336; }
.reset-btn { background-color: #00bcd4; }
.set-btn { background-color: #ffc107; color: #333; font-weight: 600; } /* For Apply Defaults */

.control-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);
}
.control-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Settings Section for Default Durations */
.settings {
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
}

.settings h2 {
    font-size: 1.6em;
    margin-bottom: 5px;
}

.setting-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 80%; /* Control width of setting items */
    max-width: 280px; /* Max width for readability */
}

.setting-item label {
    font-size: 1em;
    margin-right: 15px;
    color: rgba(255, 255, 255, 0.8);
}

.setting-item input[type="number"] {
    width: 70px; /* Fixed width for input fields */
    padding: 8px 5px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background-color: rgba(255, 255, 255, 0.1);
    color: #fff;
    font-size: 1em;
    font-weight: 600;
    text-align: center;
    outline: none;
    transition: border-color 0.3s ease, background-color 0.3s ease;
    -moz-appearance: textfield; /* Hide Firefox number input arrows */
}
/* Hide Chrome, Safari, Edge, Opera number input arrows */
.setting-item input::-webkit-outer-spin-button,
.setting-item input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
.setting-item input[type="number"]:focus {
    border-color: #fff;
    background-color: rgba(255, 255, 255, 0.2);
}

#apply-settings-btn {
    margin-top: 10px;
    width: 80%;
    max-width: 300px;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 450px) {
    .pomodoro-container {
        padding: 25px 15px;
        gap: 20px;
    }
    h1 {
        font-size: 2em;
    }
    .timer-display-wrapper {
        font-size: 4em;
        padding: 10px 0; /* Adjust padding if font size changes */
    }
    .timer-adjust-btn {
        width: 35px;
        height: 35px;
    }
    .timer-adjust-btn .material-icons {
        font-size: 1.8em;
    }
    .timer-mode button {
        font-size: 0.9em;
        padding: 8px 12px;
        min-width: unset; /* Let flex handle width */
        flex-basis: auto;
    }
    .timer-controls, .settings .setting-item, #apply-settings-btn {
        width: 90%;
    }
}

@media (max-width: 350px) {
    .timer-mode {
        flex-direction: column; /* Stack mode buttons on very small screens */
    }
    .timer-mode button {
        width: 100%;
        margin-bottom: 5px;
    }
    .setting-item {
        flex-direction: column;
        align-items: flex-start; /* Align labels left */
        gap: 5px;
        width: 100%;
    }
    .setting-item label {
        margin-bottom: 0;
    }
    .setting-item input[type="number"] {
        width: 100%;
        max-width: 100px; /* Keep input reasonable size */
    }
}
